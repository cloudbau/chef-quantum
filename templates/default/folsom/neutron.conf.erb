[DEFAULT]
debug = <%= @quantum_debug %>
verbose = <%= @quantum_verbose %>
bind_host = <%= @quantum_ipaddress %>
bind_port = <%= @quantum_port %>

state_path=/var/run/neutron

<% if @use_syslog == true %>
use_syslog=<%= @use_syslog %>
syslog_log_facility=<%= @log_facility %>
<% end %>

<% if node["quantum"]["logging.conf"]["use"] %>
log_config=/etc/quantum/logging.conf
<% end %>

<% if @quantum_plugin == "ovs" %>
core_plugin = neutron.plugins.openvswitch.ovs_neutron_plugin.OVSNeutronPluginV2
<% elsif @quantum_plugin == "midonet" %>
core_plugin = quantum.plugins.midonet.plugin.MidonetPluginV2
<% elsif @quantum_plugin == "nicira" %>
core_plugin = neutron.plugins.nicira.nicira_nvp_plugin.NeutronPlugin.NvpPluginV2
<% end %>
api_paste_config = /etc/neutron/api-paste.ini
auth_strategy = keystone

# Enable or disable overlapping IPs for subnets
# Attention: the following parameter MUST be set to False if Quantum is
# being used in conjunction with nova security groups and/or metadata service.
allow_overlapping_ips = <%= @overlapping_ips %>

rpc_thread_pool_size = 1
rpc_conn_pool_size = 10
rpc_response_timeout = 60
rpc_cast_timeout = 30
control_exchange = quantum

# IP address of the RabbitMQ installation
rabbit_host = <%= @rabbit_ipaddress %>
rabbit_port = <%= @rabbit_port %>
rabbit_max_retries = 0
rabbit_retry_interval = 1

notification_driver = neutron.openstack.common.notifier.rpc_notifier
default_notification_level = INFO
notification_topics = notifications

agent_down_time = 14

[QUOTAS]
# resource name(s) that are supported in quota features
# quota_items = network,subnet,port

# default number of resource allowed per tenant, minus for unlimited
# default_quota = -1

# number of networks allowed per tenant, and minus means unlimited
quota_network = 20

# number of subnets allowed per tenant, and minus means unlimited
quota_subnet = 20

# number of ports allowed per tenant, and minus means unlimited
# quota_port = 50
# number of security groups allowed per tenant, and minus means unlimited
quota_security_group = 20

# number of security group rules allowed per tenant, and minus means unlimited
quota_security_group_rule = 200

# number of ports allowed per tenant, and minus means unlimited
quota_port = 150

# default driver to use for quota checks
# quota_driver = neutron.quota.ConfDriver

[DATABASE]
sql_connection = mysql://<%= @db_user %>:<%= @db_password %>@<%= @db_ip_address %>/<%= @db_name %>
